#include <stdio.h>
#include <stdbool.h>
// Define the maximum number of vertices
#define MAX_VERTICES 100
// Define the maximum number of edges (adjust as needed)
#define MAX_EDGES 1000
// Define the graph as adjacency matrix
int graph[MAX_VERTICES][MAX_VERTICES];
// Define the number of vertices in the graph
int numVertices = 0;
// Function to add an edge to the graph
void addEdge(int src, int dest) {
graph[src][dest] = 1;
graph[dest][src] = 1; // For an undirected graph
}
// Function to perform Depth-First Search
void DFS(int vertex, bool visited[]) {
visited[vertex] = true;
printf("%d ", vertex);
for (int i = 0; i < numVertices; i++) {
if (graph[vertex][i] == 1 && !visited[i]) {
DFS(i, visited);
}
}
}
int main() {
numVertices = 5;
// Initialize the graph with zeros
for (int i = 0; i < numVertices; i++) {
for (int j = 0; j < numVertices; j++) {
graph[i][j] = 0;
}
}
addEdge(0, 1);
addEdge(0, 2);
addEdge(1, 3);
addEdge(1, 4);
printf("Depth-First Traversal (starting from vertex 0):\n");
bool visited[MAX_VERTICES] = { false };
DFS(0, visited);
return 0;
}
